Como a visualização de um diff entre duas versões de um arquivo ajuda você a ver o bug que foi introduzido?

O diff faz uma rapida comparacao entre os dois arquivos. Como saida, ele mostrara todas as diferencas deste arquivos.
Eh uma ferramenta interessante que facilita a busca pelo o que foi alterado no arquivo mais recente, por exemplo.



Como ter fácil acesso a todo o histórico de um arquivo pode torná-lo um programador mais eficiente no longo prazo?

Tendo acesso ao historico de um arquivo pode ajudar o programdor a reparar possiveis erros que ele cometeu em sua nova implementacao.
Alem de ser possivel saber todas as datas das alteracoes.



Por que você acha que alguns sistemas de controle de versão, como o Git, permitem salvar vários arquivos em um commit, enquanto outros, como o Google Docs, tratam cada arquivo separadamente?

O GIT cuida de um conjunto de arquivos, de uma pasta de projetos.
Ele cria um repositorio de arquivos para controlar as versoes.

Ja o Google Docs, por exemplo, cuida apenas de um documento.



Como usar os comandos git log e git diff para visualizar o histórico dos arquivos?

Para usar o git log:
Basta ir ate ao repositorio e digitar o comando.
Como resultado, aparecerao todos os commits feitos ate o momento.

Para usar o git diff:
Basta digitar o comando com os IDs dos commits de interesse.
Por Exemplo:
$ git diff d6ff3eacbfce67 30fade52afeca290


De que modo o controle de versão pode dar a você mais segurança para fazer alterações que podem danificar algo?

O controle de ersao pode me dar mais segurança pelo fato de ser possivel eu voltar para as versoes anteriores.
Entao, se eu fazer alguma coisa errada em meu codigo, posso simplesmente voltar para a versao anterior.


Agora que você já configurou a sua área de trabalho, você quer usar o Git para quê?

Para criar um controle de versao de meus projetos de forma eficiente e organizada.

